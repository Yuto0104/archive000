//=============================================================================
//
// マップマネージャークラス(map_manager.h)
// Author : 唐﨑結斗
// 概要 : マップマネージャーの派生を行う
//
//=============================================================================
#ifndef _MAP_MANAGER_H_		// このマクロ定義がされてなかったら
#define _MAP_MANAGER_H_		// 二重インクルード防止のマクロ定義

//*****************************************************************************
// インクルード
//*****************************************************************************
#include "manager.h"

//*****************************************************************************
// 前方宣言
//*****************************************************************************
class CObject;
class CMesh3D;

//=============================================================================
// マネージャークラス
// Author : 唐﨑結斗
// 概要 : マネージャー生成を行うクラス
//=============================================================================
class CMapManager : public CManager
{
public:
	//=============================================================================
	// モード列挙型
	// Author : 唐﨑結斗
	// 概要 : モードの種別
	//=============================================================================
	enum EDIT_MODE
	{
		MODE_NONE = 0,				// モード無し
		MODE_MODEL,					// モデルの設定
		MODE_MESH,					// メッシュの設定
		MAX_MODE,					// モードの最大数
	};

	//--------------------------------------------------------------------
	// 静的メンバ関数
	//--------------------------------------------------------------------
	static CMapManager *Create();							// インスタンスの生成

	//--------------------------------------------------------------------
	// コンストラクタとデストラクタ
	//--------------------------------------------------------------------
	CMapManager();
	~CMapManager() override;

	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	HRESULT Init() override;			// 初期化
	void Uninit() override;				// 終了
	void Update() override;				// 更新
	void Draw() override;				// 描画
	void SetMap(char *pFileName);		// マップの読み込み

private:
	//--------------------------------------------------------------------
	// メンバ関数
	//--------------------------------------------------------------------
	void LoadFieldMesh(char *pFileName);
	void LoadSkayBox(char *pFileName);
	void LoadScoreItem(char *pFileName);
};

#endif
